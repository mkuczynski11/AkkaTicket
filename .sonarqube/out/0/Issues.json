{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-3.23524.11 (f43cd10b)",
        "semanticVersion": "4.8.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0114",
          "level": "warning",
          "message": "'User.Log' hides inherited member 'Eventsourced.Log'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/User.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 35,
                  "endLine": 74,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_actorSystem' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 16,
                  "endLine": 23,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 29,
                  "endLine": 16,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_actorRef' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 16,
                  "endLine": 23,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 27,
                  "endLine": 19,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS4014",
          "level": "warning",
          "message": "Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 13,
                  "endLine": 104,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'name' in 'RequestReadEvents.RequestReadEvents(string requestId, string name)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Controllers/ApiController.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 128,
                  "endLine": 111,
                  "endColumn": 132
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB0021",
          "level": "warning",
          "message": "'SHA1CryptoServiceProvider' is obsolete: 'Derived cryptographic types are obsolete. Use the Create method on the base type instead.'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 24,
                  "endLine": 162,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "SYSLIB0021",
          "level": "warning",
          "message": "'SHA1CryptoServiceProvider' is obsolete: 'Derived cryptographic types are obsolete. Use the Create method on the base type instead.'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 61,
                  "endLine": 162,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 55,
                  "endLine": 54,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 55,
                  "endLine": 64,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 55,
                  "endLine": 72,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 57,
                  "endLine": 85,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 13,
                  "endLine": 98,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'eventIdToActor' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 47,
                  "endLine": 13,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'actorToEventId' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 47,
                  "endLine": 14,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'reservationIdToActor' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 47,
                  "endLine": 15,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'actorToReservationId' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 47,
                  "endLine": 16,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'CreateEventSeatDTO' to match pascal case naming rules, consider using 'CreateEventSeatDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/CreateEventSeatDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/User.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 23,
                  "endLine": 13,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'userManagerActor' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/TicketingSupervisor.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 19,
                  "endLine": 12,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'bookingManagerActor' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/TicketingSupervisor.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 19,
                  "endLine": 13,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/User.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 23,
                  "endLine": 14,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/User.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 23,
                  "endLine": 15,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_configuration' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 41,
                  "endLine": 17,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/User.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 23,
                  "endLine": 30,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/User.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 23,
                  "endLine": 31,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'CreateUserDTO' to match pascal case naming rules, consider using 'CreateUserDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/CreateUserDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'CreateReservationDTO' to match pascal case naming rules, consider using 'CreateReservationDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/CreateReservationDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'CreateEventDTO' to match pascal case naming rules, consider using 'CreateEventDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/CreateEventDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'GetEventSeatDTO' to match pascal case naming rules, consider using 'GetEventSeatDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/GetEventSeatDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'GetReservationDataDTO' to match pascal case naming rules, consider using 'GetReservationDataDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/GetReservationDataDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'UpdateEventDTO' to match pascal case naming rules, consider using 'UpdateEventDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/UpdateEventDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_seatList' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 28,
                  "endLine": 35,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'seatIdToReservationActor' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 47,
                  "endLine": 36,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'reservationActorToSeatId' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 47,
                  "endLine": 37,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_seatList' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 28,
                  "endLine": 21,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'seatIdToReservationActor' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 47,
                  "endLine": 22,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'reservationActorToSeatId' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 47,
                  "endLine": 23,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'UpdateUserDTO' to match pascal case naming rules, consider using 'UpdateUserDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/UpdateUserDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'GetEventsDataDTO' to match pascal case naming rules, consider using 'GetEventsDataDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/GetEventsDataDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'GetEventDataDTO' to match pascal case naming rules, consider using 'GetEventDataDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/GetEventDataDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_shardRegion' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/UserManager.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 27,
                  "endLine": 13,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'GetUserDataDTO' to match pascal case naming rules, consider using 'GetUserDataDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/GetUserDataDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'EventDTO' to match pascal case naming rules, consider using 'EventDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/GetEventsDataDTO.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 22,
                  "endLine": 9,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'queryTimeoutTimer' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/EventQuery.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 29,
                  "endLine": 12,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Shared/Messages/Event/Internal/ReadEventData.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Shared/Messages/User/Internal/Register.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 23,
                  "endLine": 13,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Shared/Messages/User/Internal/Register.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 26,
                  "endLine": 12,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2094",
          "level": "warning",
          "message": "Remove this empty class, write its code or make it an \"interface\".",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Shared/Messages/User/Internal/Restore.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Shared/Messages/Event/Out/RespondEventsData.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 23,
                  "endLine": 10,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Shared/Messages/Event/Out/RespondEventsData.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 32,
                  "endLine": 11,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Shared/Messages/Event/Out/RespondEventsData.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 27,
                  "endLine": 19,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Shared/Messages/Event/Out/RespondEventsData.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 27,
                  "endLine": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'reservationIdToRservationActor' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/User.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 47,
                  "endLine": 65,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_logger' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Controllers/ApiController.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 49,
                  "endLine": 20,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 11 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Shared/Messages/Event/Out/RespondEventData.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 32,
                  "endLine": 7,
                  "endColumn": 221
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'User does not exist' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Controllers/ApiController.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 46,
                  "endLine": 35,
                  "endColumn": 67
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Controllers/ApiController.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 46,
                  "endLine": 59,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Controllers/ApiController.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 46,
                  "endLine": 70,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Controllers/ApiController.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 46,
                  "endLine": 130,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 10 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/DTO/GetEventDataDTO.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 31,
                  "endLine": 6,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 10 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Shared/Messages/Event/Internal/EventData.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 25,
                  "endLine": 7,
                  "endColumn": 192
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/CurrencyExchange.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 27,
                  "endLine": 33,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/EventQuery.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 38,
                  "endLine": 64,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Use 'Count' property here instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 142,
                  "endLine": 75,
                  "endColumn": 147
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Use 'Count' property here instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 149,
                  "endLine": 83,
                  "endColumn": 154
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Use 'Count' property here instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 163,
                  "endLine": 96,
                  "endColumn": 168
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Call the ArgumentException constructor that contains a message and/or paramName parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/CurrencyExchange.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 27,
                  "endLine": 33,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 34,
                  "endLine": 70,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/EventQuery.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 30,
                  "endLine": 95,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 33,
                  "endLine": 40,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 13,
                  "endLine": 42,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 21,
                  "endLine": 57,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 21,
                  "endLine": 67,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 21,
                  "endLine": 77,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 21,
                  "endLine": 87,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 21,
                  "endLine": 102,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 21,
                  "endLine": 112,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 21,
                  "endLine": 122,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 21,
                  "endLine": 129,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'nce'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 52,
                  "endLine": 32,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'eventChangedMsg'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Reservation.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 35,
                  "endLine": 91,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'eventCancelledMsg'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Reservation.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 37,
                  "endLine": 95,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2016",
          "level": "note",
          "message": "Forward the 'cancellationToken' parameter to the 'ContinueWith' method or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 13,
                  "endLine": 102,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ArgumentName": "cancellationToken",
              "ParameterName": null,
              "ShouldFix": "1"
            }
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/EventQuery.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 95,
                  "endLine": 120,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'router'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 17,
                  "endLine": 95,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4790",
          "level": "warning",
          "message": "Make sure this weak hash algorithm is not used in a sensitive context here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 57,
                  "endLine": 162,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'CurrencyRate' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/CurrencyExchange.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 24,
                  "endLine": 22,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Use 'Count' property here instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 142,
                  "endLine": 44,
                  "endColumn": 147
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Use 'Count' property here instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 149,
                  "endLine": 52,
                  "endColumn": 154
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Use 'Count' property here instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 145,
                  "endLine": 62,
                  "endColumn": 150
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer the string comparison method overload of 'string.StartsWith(string)' that takes a 'StringComparison' enum value to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/EventQuery.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 26,
                  "endLine": 120,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": "ToLower"
            }
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 34,
                  "endLine": 39,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1850",
          "level": "note",
          "message": "Prefer static 'System.Security.Cryptography.SHA1.HashData' method over 'ComputeHash'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 40,
                  "endLine": 165,
                  "endColumn": 68
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 50,
                  "endLine": 162,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ComputeTypePropertyKey": "ComputeHash",
              "DeleteHashCreationPropertyKey": "DeleteHashCreationPropertyKey",
              "HashCreationIndexPropertyKey": "0",
              "TargetHashTypeDiagnosticPropertyKey": "SHA1"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetHashCode' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Service/AkkaService.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 25,
                  "endLine": 160,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 25,
                  "endLine": 122,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 35,
                  "endLine": 124,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 25,
                  "endLine": 129,
                  "endColumn": 69
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/BookingManager.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 41,
                  "endLine": 131,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 24,
                  "endLine": 119,
                  "endColumn": 68
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 38,
                  "endLine": 121,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 127,
                  "endLine": 75,
                  "endColumn": 149
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 134,
                  "endLine": 83,
                  "endColumn": 156
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 148,
                  "endLine": 96,
                  "endColumn": 170
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'reservationCancelledMsg'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Event.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 43,
                  "endLine": 118,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 20,
                  "endLine": 86,
                  "endColumn": 64
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 34,
                  "endLine": 88,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 127,
                  "endLine": 44,
                  "endColumn": 149
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 134,
                  "endLine": 52,
                  "endColumn": 156
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 130,
                  "endLine": 62,
                  "endColumn": 152
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'availableSeats'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/mkuczynski11/Desktop/magisterka/repos/AkkaTicket/AkkaTicket/Actors/Alternative/EventReceive.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 21,
                  "endLine": 65,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1829": {
          "id": "CA1829",
          "shortDescription": "Use Length/Count property instead of Count() when available",
          "fullDescription": "Enumerable.Count() potentially enumerates the sequence while a Length/Count property is a direct access.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1829",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1850": {
          "id": "CA1850",
          "shortDescription": "Prefer static 'HashData' method over 'ComputeHash'",
          "fullDescription": "It is more efficient to use the static 'HashData' method over creating and managing a HashAlgorithm instance to call 'ComputeHash'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1850",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1854": {
          "id": "CA1854",
          "shortDescription": "Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method",
          "fullDescription": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check. 'ContainsKey' and the indexer both would lookup the key under the hood, so using 'TryGetValue' removes the extra lookup.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1854",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1862": {
          "id": "CA1862",
          "shortDescription": "Use the 'StringComparison' method overloads to perform case-insensitive string comparisons",
          "fullDescription": "Avoid calling 'ToLower', 'ToUpper', 'ToLowerInvariant' and 'ToUpperInvariant' to perform case-insensitive string comparisons because they lead to an allocation. Instead, prefer calling the method overloads of 'Contains', 'IndexOf' and 'StartsWith' that take a 'StringComparison' enum value to perform case-insensitive comparisons. Switching to using an overload that takes a 'StringComparison' might cause subtle changes in behavior, so it's important to conduct thorough testing after applying the suggestion. Additionally, if a culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1862",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2016": {
          "id": "CA2016",
          "shortDescription": "Forward the 'CancellationToken' parameter to methods",
          "fullDescription": "Forward the 'CancellationToken' parameter to methods to ensure the operation cancellation notifications gets properly propagated, or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2016",
          "properties": {
            "category": "Reliability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2208": {
          "id": "CA2208",
          "shortDescription": "Instantiate argument exceptions correctly",
          "fullDescription": "A call is made to the default (parameterless) constructor of an exception type that is or derives from ArgumentException, or an incorrect string argument is passed to a parameterized constructor of an exception type that is or derives from ArgumentException.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2208",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0114": {
          "id": "CS0114",
          "shortDescription": "Member hides inherited member; missing override keyword",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0114)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS4014": {
          "id": "CS4014",
          "shortDescription": "Because this call is not awaited, execution of the current method continues before the call is completed",
          "fullDescription": "The current method calls an async method that returns a Task or a Task<TResult> and doesn't apply the await operator to the result. The call to the async method starts an asynchronous task. However, because no await operator is applied, the program continues without waiting for the task to complete. In most cases, that behavior isn't what you expect. Usually other aspects of the calling method depend on the results of the call or, minimally, the called method is expected to complete before you return from the method that contains the call.\u000d\u000a\u000d\u000aAn equally important issue is what happens to exceptions that are raised in the called async method. An exception that's raised in a method that returns a Task or Task<TResult> is stored in the returned task. If you don't await the task or explicitly check for exceptions, the exception is lost. If you await the task, its exception is rethrown.\u000d\u000a\u000d\u000aAs a best practice, you should always await the call.\u000d\u000a\u000d\u000aYou should consider suppressing the warning only if you're sure that you don't want to wait for the asynchronous call to complete and that the called method won't raise any exceptions. In that case, you can suppress the warning by assigning the task result of the call to a variable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS4014)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S107": {
          "id": "S107",
          "shortDescription": "Methods should not have too many parameters",
          "fullDescription": "Methods with a long parameter list are difficult to use because maintainers must figure out the role of each parameter and keep track of their position.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-107",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1104": {
          "id": "S1104",
          "shortDescription": "Fields should not have public accessibility",
          "fullDescription": "Public fields in public classes do not respect the encapsulation principle and have three main disadvantages:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1104",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1125": {
          "id": "S1125",
          "shortDescription": "Boolean literals should not be redundant",
          "fullDescription": "A boolean literal can be represented in two different ways: true or false. They can be combined with logical operators (!, &&, ||, ==, !=) to produce logical expressions that represent truth values. However, comparing a boolean literal to a variable or expression that evaluates to a boolean value is unnecessary and can make the code harder to read and understand. The more complex a boolean expression is, the harder it will be for developers to understand its meaning and expected behavior, and it will favour the introduction of new bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1125",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1192": {
          "id": "S1192",
          "shortDescription": "String literals should not be duplicated",
          "fullDescription": "Duplicated string literals make the process of refactoring complex and error-prone, as any change would need to be propagated on all occurrences.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1192",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Commented-out code distracts the focus from the actual executed code. It creates a noise that increases maintenance code. And because it is never executed, it quickly becomes out of date and invalid.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "An unused local variable is a variable that has been declared but is not used anywhere in the block of code where it is defined. It is dead code, contributing to unnecessary complexity and leading to confusion when reading the code. Therefore, it should be removed from your code to maintain clarity and efficiency.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2094": {
          "id": "S2094",
          "shortDescription": "Classes should not be empty",
          "fullDescription": "There is no good excuse for an empty class. If it’s being used simply as a common extension point, it should be replaced with an interface. If it was stubbed in as a placeholder for future development it should be fleshed-out. In any other case, it should be eliminated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2094",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2245": {
          "id": "S2245",
          "shortDescription": "Using pseudorandom number generators (PRNGs) is security-sensitive",
          "fullDescription": "Using pseudorandom number generators (PRNGs) is security-sensitive. For example, it has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2245",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2971": {
          "id": "S2971",
          "shortDescription": "LINQ expressions should be simplified",
          "fullDescription": "In the interests of readability, code that can be simplified should be simplified. To that end, there are several ways IEnumerable language integrated queries (LINQ) can be simplified. This not only improves readabilty but can also lead to improved performance.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2971",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "This rule raises an issue when the code cognitive complexity of a function is above a certain threshold.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields which are written but never read are a case of \"dead store\". Changing the value of such a field is useless and most probably indicates an error in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4790": {
          "id": "S4790",
          "shortDescription": "Using weak hashing algorithms is security-sensitive",
          "fullDescription": "Cryptographic hash algorithms such as MD2, MD4, MD5, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160 and SHA-1 are no longer considered secure, because it is possible to have collisions (little computational effort is enough to find two or more different inputs that produce the same hash).",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4790",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "SYSLIB0021": {
          "id": "SYSLIB0021",
          "shortDescription": "Type or member is obsolete",
          "defaultLevel": "warning",
          "helpUri": "https://aka.ms/dotnet-warnings/SYSLIB0021",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry",
              "CustomObsolete"
            ]
          }
        }
      }
    }
  ]
}